{"name":"ActorToConsole","type":"script","scope":"global","author":"g325YPUxaNNgCApI","img":"icons/svg/dice-target.svg","command":"const tokens = canvas.tokens.controlled;\nfor (let i = 0; i < tokens.length; i++) {\n    console.log(game.actors.get(tokens[i].document.actorId));\n}","ownership":{"default":0,"g325YPUxaNNgCApI":3},"flags":{"core":{"sourceId":"Macro.9CCDEv3NKAqG3QOu"}},"_stats":{"systemId":"dnd5e","systemVersion":"2.0.3","coreVersion":"10.288","createdTime":1665594319558,"modifiedTime":1667187834762,"lastModifiedBy":"g325YPUxaNNgCApI"},"folder":null,"sort":0,"_id":"71qjrOSoGFzpxkz4"}
{"name":"Stress","type":"script","scope":"global","author":"g325YPUxaNNgCApI","img":"icons/magic/death/undead-ghosts-trio-blue.webp","command":"//const actorIds = [\"tBmsCEZ4otbmmPcO\",\"anotherID\",\"...\"]; // for corner cases and whatever\nconst actorIds = canvas.tokens.controlled.map(t => t.actor.id);\nconst icon = \"icons/magic/death/undead-ghosts-trio-blue.webp\";\nconst label = \"Stress\";\n\nconst keys = [\n  \"system.bonuses.abilities.save\",\n  \"system.bonuses.abilities.check\",\n  \"system.bonuses.mwak.attack\",\n  \"system.bonuses.rwak.attack\",\n  \"system.bonuses.msak.attack\",\n  \"system.bonuses.rsak.attack\"\n];\nconst actorOptions = actorIds.reduce((acc, id) => {\n  const name = game.actors.get(id).name;\n  return acc + `<option value=\"${id}\">${name}</option>`;\n}, \"\");\nconst dirOptions = `\n<option value=\"-1\">Reduce Stress</option>\n<option value=\"1\">Increase Stress</option>`;\nconst content = `\n<form>\n  <div class=\"form-group\">\n    <label>Affected Actor:</laberl>\n    <div class=\"form-fields\">\n      <select id=\"target-stress-actor\">${actorOptions}</select>\n      <select id=\"stress-direction\">${dirOptions}</select>\n    </div>\n  </div>\n</form>`;\nawait Dialog.prompt({\n  title: \"Stress Config\", content, callback: (html) => {\n    const actorId = html[0].querySelector(\"#target-stress-actor\").value;\n    const dir = html[0].querySelector(\"#stress-direction\").value;\n    return updateValue(actorId, dir);\n  }\n});\n\nfunction updateValue(actorId, dir) {\n  const actor = game.actors.get(actorId);\n  const effect = actor.effects.find(e => foundry.utils.hasProperty(e, \"flags.world.stress\"));\n  const current = effect?.getFlag(\"world\", \"stress\") ?? 0;\n  //    const stress = Number(Math.max(current, 0)) + Number(dir);\n  const stress = Number(Math.max(current + Number(dir), 0));\n  const changes = keys.map(key => {\n    return { key, mode: CONST.ACTIVE_EFFECT_MODES.ADD, value: `-${stress}` };\n  });\n  const effectData = { changes, icon, label };\n  foundry.utils.setProperty(effectData, \"flags.world.stress\", stress);\n  if (effect) return effect.update(effectData);\n  return actor.createEmbeddedDocuments(\"ActiveEffect\", [effectData]);\n}","ownership":{"default":0,"g325YPUxaNNgCApI":3},"flags":{"core":{"sourceId":"Macro.dkK4qMJG7zQLkfT0"}},"_stats":{"systemId":"dnd5e","systemVersion":"2.0.3","coreVersion":"10.288","createdTime":1667051893165,"modifiedTime":1667187932266,"lastModifiedBy":"g325YPUxaNNgCApI"},"folder":null,"sort":0,"_id":"bUIwtAnVoqFQgdKV"}
